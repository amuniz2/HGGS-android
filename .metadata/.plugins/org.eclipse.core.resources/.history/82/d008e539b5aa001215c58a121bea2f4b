package com.amlm.honeygogroceryshopping.activities;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.EnumMap;

import roboguice.RoboGuice;
import roboguice.inject.InjectView;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Adapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ListView;

import com.amlm.honeygogroceryshopping.FileNameConstants;
import com.amlm.honeygogroceryshopping.adapters.GroceryStoreAdapter;
import com.amlm.honeygogroceryshopping.dataaccess.GroceryFile;
import com.amlm.honeygogroceryshopping.interfaces.IGroceryFile;
import com.google.inject.Injector;

public class MainActivity extends GroceryFileConsumer {
	@InjectView(R.id.GoShopping) Button _btnGoShopping;
	@InjectView(R.id.CreateGroceryList) Button _btnStartList;
	@InjectView(R.id.EditGroceryList) Button _btnContinueList;
//  @InjectView(R.id.groceryStoresAsRadioGroup) RadioGroup _groceryStores;
	  @InjectView(R.id.lvGroceryStores) ListView _groceryStores;
    @InjectView(R.id.add_button) ImageButton _btnAddGroceryStore;
    @InjectView(R.id.edit_item) ImageButton _btnEditGroceryStores;
    @InjectView(R.id.activityButtons) LinearLayout _activityButtons;
    @InjectView(R.id.button_save) Button _btnSave;
    
    

    /* data initialization */
    //static protected EnumMap<FileNameConstants, String> FileNames;
	private Intent _pendingIntent;
	private String _currentGroceryStore;
    private ArrayList<String> _groceryStoreNames;
    private String _defaultStoreName = GroceryFile.defaultStoreName;
    private GroceryStoreAdapter _adapter = null;
    protected String getCurrentGroceryStore() { return _currentGroceryStore; }
    protected void setCurrentGrocyerStore(String storeName){ _currentGroceryStore = storeName; }
    //public String getSelectedStoreName(){ return _selectedStoreName;}
    //public void setSelectedStoreName(String value) {_selectedStoreName=value;}
    public GroceryStoreAdapter getAdapter() { return _adapter;}
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    	GroceryFile.setGroceryFilesDir(this.getApplicationContext());
        initializeStoreList();
       
    /*    RoboGuice.setBaseApplicationInjector(getApplication(), 
                RoboGuice.DEFAULT_STAGE, new GroceryFileModule());
      */  
 
        
        
    }

    private void initializeFilesForSelectedGroceryStore()
    {
    	String currentlySelectedGroceryStoreName = this.getCurrentlySelectedGroceryStoreName();
    	if (!currentlySelectedGroceryStoreName.equalsIgnoreCase(this.getCurrentGroceryStore()))
    	{
    		identifyGroceryFiles(currentlySelectedGroceryStoreName);
    		super.setInitialized(false);
    		initialize();
    		this.setLastSelectedGroceryStoreName(currentlySelectedGroceryStoreName);
    		this.setCurrentGrocyerStore(currentlySelectedGroceryStoreName);
    	}
    	else
    	{
    	//	identifyGroceryFiles(currentlySelectedGroceryStoreName);
    		onFilesInitialized();
    	}
    	
    }
    private void toggleEditMode(boolean edit)
    {
    	this._btnAddGroceryStore.setVisibility((edit) ? View.VISIBLE : View.GONE);
    	this._btnEditGroceryStores.setVisibility((edit) ? View.GONE : View.VISIBLE);
    	this._activityButtons.setVisibility((edit)? View.GONE : View.VISIBLE);
    	getAdapter().setEditMode(edit);
    	getAdapter().notifyDataSetChanged();
    	
    }
    public void editStores(View v)
    {
    	toggleEditMode(true);
    }
    public void stopEditingStores()
    {
    	toggleEditMode(false);
    }
    
    public void addStore(View v)
    {
    /*	RadioButton newRdb = new RadioButton(this);
    	LayoutParams layout= _groceryStores.getChildAt(0).getLayoutParams();
    	newRdb.setLayoutParams(layout);
    	
    	_groceryStores.addView(newRdb);
    	EditText et = new EditText(this);
    	et.setText(R.string.new_grocery_story_name);
    	et.setLayoutParams(new LayoutParams(-2, -2));
    	Intent intent = new Intent(this, EditCurrentItemActivity.class);
       	intent.putExtra(BaseEditItemActivity.EXTRA_ITEM, newItem);
       	
    	this.startActivityForResult(intent, ACTIVITY_ADD);
    	_groceryStores.addView(et);
    	et.setBackgroundResource(drawable.rounded_border);
    	*/

       	Intent intent = new Intent(this, CreateGroceryStoreActivity.class);
         intent.putExtra(BaseEditItemActivity.EXTRA_ITEM, _currentGroceryStore);
       	
    	this.startActivityForResult(intent, BaseListActivity.ACTIVITY_ADD);	
    }
    @Override
    protected void onActivityResult (int requestCode, int resultCode, Intent data) {
	   processActivityResult(requestCode, resultCode, data);
    }   
    private String getCurrentlySelectedGroceryStoreName()
    {
    	return _adapter.getSelectedItem();
    }
    private void setLastSelectedGroceryStoreName(String storeName)
    {    	
    	SharedPreferences prefs = this.getPreferences(MODE_PRIVATE);
    	Editor editor = prefs.edit();
    	editor.putString("Selected_Grocery_Name", storeName);
    	editor.apply();

    	
    }
    private String getLastSelectedGroceryStoreName()
    {
    	SharedPreferences prefs = this.getPreferences(MODE_PRIVATE);
    	return prefs.getString("Selected_Grocery_Name", GroceryFile.defaultStoreName);
    	/*int radioButtonId = _groceryStores.getCheckedRadioButtonId();
    	String storeName ;
    	if (radioButtonId != R.id.default_grocery_store)
    	{
    		RadioButton rdb = (RadioButton)findViewById(radioButtonId);
    		storeName = rdb.getText().toString();
    	}
    	else
    	{
    		storeName = _defaultStoreName;
    	}
    	return storeName;
    	*/
    	
    }
    protected  void identifyGroceryFiles(String storeName)
    {
    	//todo: ensure that we only use external files
    	// if using external storage
    	GroceryFile.JsonFiles = new EnumMap<FileNameConstants, IGroceryFile>(FileNameConstants.class); 
    	
    	identifyGroceryFile(storeName, FileNameConstants.MasterFileName, "master_list.json", true);		
    	identifyGroceryFile(storeName, FileNameConstants.CurrentFileName, "current_list.json", true);
    	identifyGroceryFile(storeName, FileNameConstants.ShoppingListFileName,"shopping_list.json",false);
    	identifyGroceryFile(storeName, FileNameConstants.CategoryListFileName,"category.json", true);

    }
  
    private  void identifyGroceryFile(String storeName, FileNameConstants efn, String fn, boolean share)
    {
	      
	    	Injector injector = RoboGuice.getInjector(this);
	       
	    	IGroceryFile gfile=injector.getInstance(IGroceryFile.class);
	    	gfile.init( storeName, fn, share);
	    	if (!gfile.exists())
	    	{
	    		try {
					gfile.createFromAssets();
				}
	    		catch (Exception e) {
					// TODO Auto-generated catch block
					reportError(getTag(), e,this);
				}
	    	}
	    	GroceryFile.JsonFiles.put(efn, gfile);
	    	
	    	
    }
  
   
   
    public void editGroceryList(View view) 
    {
    
    	startActivity(createEditGroceryListIntent());    	
    	
    }
    public void goShopping(View view) 
    {
       	Intent intent = new Intent(this, ShoppingListActivity.class);
       	//intent.putExtra(BaseListActivity.CREATE_NEW_LIST, false);
    	startActivity(intent);    		
    }
    
    @Override
    public void startActivity(Intent intent)
    {
    	_pendingIntent = intent;
    	this.initializeFilesForSelectedGroceryStore();
    	
    }
    @Override
    protected void onFilesInitialized()
	 {
	    super.onFilesInitialized();    
		super.startActivity(_pendingIntent);
		
    	

	 }
    public void createGroceryList(View view) 
    {
       	
    	startActivity(createNewGroceryListIntent());    	
    	
    }
    
    public Intent createEditGroceryListIntent()
    {
       	Intent intent = new Intent(this, EditCurrentListActivity.class);
    	//Intent intent = new Intent(this, EditCurrentListActivity.class);
       	intent.putExtra(BaseListActivity.CREATE_NEW_LIST, false);   
       	return intent;
    }
    public Intent createNewGroceryListIntent()
    {
    	Intent ret = new Intent(this, EditCurrentListActivity.class);
    	//Intent intent = new Intent(this, EditCurrentListActivity.class);
       	ret.putExtra(BaseListActivity.CREATE_NEW_LIST, true);
       	return ret;
    }
    public void exit(View view)
    {
    	this.finish();
    }
    // made public for testing!
    @Override
    public void onResume()
    {
   
    		/*
    		 * todo: when a store name is selected, run the logic below, instead of on resume
    		 * boolean shoppingListExists = GroceryFile.JsonFiles.get(FileNameConstants.CurrentFileName).exists();
  			this._btnContinueList.setEnabled(shoppingListExists);
			this._btnGoShopping.setEnabled(shoppingListExists);
  			*/
     	super.onResume();
    }



	
    protected  ArrayList<String> getStoreNames()
    {    	
    	
    	
		ArrayList<String> ret = new ArrayList<String>();
		File groceryFilesFolder = GroceryFile.getGroceryFilesDir();
		Collections.addAll(ret,  groceryFilesFolder.list());
		if (ret.size() == 0)
		{
			ret.add(_defaultStoreName);
		}
		
		return ret;
    }	
	private void initializeStoreList()
	{
		_groceryStoreNames = getStoreNames();
		//_currentGroceryStore = getSelectedGroceryStoreName();
		setupList(_groceryStoreNames);
	}
	protected void setupList(ArrayList<String> itemsToDisplay) {
		
		
		// TODO Auto-generated method stub
		
     	// First parameter - Context
    	// Second parameter - Layout for the row
    	// Forth - the Array of data
		 _adapter = new GroceryStoreAdapter(this,
				 /*android.R.layout.simple_list_item_single_choice,*/
     			R.layout.list_item_text_view,
    			itemsToDisplay);
 	
     	_groceryStores.setAdapter(_adapter);
     	_adapter.setNotifyOnChange(true);
      	_groceryStores.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
      	//this.setCurrentGrocyerStore(this.getLastSelectedGroceryStoreName());
      	_adapter.setSelectedItem(this.getLastSelectedGroceryStoreName());
      	// set the selected store per what is in the preferences
    	/*_groceryStores.setOnItemClickListener(new OnItemClickListener() 
    	{
    		public void onItemClick(AdapterView<?> listView, View cell,
    			int position,
                long id) 
    		{      
    			
    			if  (!_adapter.isSelected(position))
    			{
    	        	 _adapter.setSelected(position);
    	        	 _adapter.notifyDataSetChanged();

    			}
    	        		
           
    		}
    	});*/   
    	//_adapter.setSelected(0);

		
	}

	public void selectGroceryStore(View v)
	{
		int position = _groceryStores.getPositionForView(v);
		_groceryStores.setItemChecked(position, true);
		_adapter.setSelected(position);
	}
	@Override
	public String getTag() {
		// TODO Auto-generated method stub
		return "Main Activity";
	}
	 public void processActivityResult (int requestCode, int resultCode, Intent data)
	   {
	       	int pos =Adapter.NO_SELECTION;

	    	if (resultCode != RESULT_CANCELED)
	        {
	        		
				//@SuppressWarnings("unchecked")
	    		_currentGroceryStore = (String)(data.getSerializableExtra(BaseEditItemActivity.EXTRA_ITEM));
	    		this.asyncCreateGroceryStore(_currentGroceryStore);
				//to do update the list!
	           	getAdapter().setSelected(pos);
	           	getAdapter().notifyDataSetChanged();
	           	//saveList(itemsToSave);
	        }
	        
		   
	   }    
	 private class GroceryStoreCreator  extends AsyncTask<String,Void,String>
	 {

		@Override
		protected String doInBackground(String... arg0) {
			String ret = "";
			// TODO Auto-generated method stub
			String groceryStoreName = arg0[0];
			
			try {
				identifyGroceryFiles(groceryStoreName);
				//gfile.createFromAssets();
				ret = "Store created.";
			} catch (Exception e) {
				// TODO Auto-generated catch block
				ret = e.getMessage();
			}
			return ret;
		}
		 
	 }
	 public void asyncCreateGroceryStore(String groceryStore) 	{
	    	

	    	GroceryStoreCreator storeCreator = new GroceryStoreCreator();
	    	storeCreator.execute(groceryStore);
	    	//this.saveGroceryFile(efn, JsonItemList.writeList(items));
	    	
			
		}
}
