package com.amlm.honeygogroceryshopping.tests.TestEditMasterItem;

import static com.xtremelabs.robolectric.Robolectric.shadowOf;
import static org.junit.Assert.*;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.ArrayList;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;

import com.amlm.honeygogroceryshopping.activities.EditMasterItemActivity;
import com.amlm.honeygogroceryshopping.activities.R;
import com.amlm.honeygogroceryshopping.model.Category;
import com.amlm.honeygogroceryshopping.model.GroceryItem;
import com.amlm.honeygogroceryshopping.tests.common.BaseTest;
import com.xtremelabs.robolectric.RobolectricTestRunner;
import com.xtremelabs.robolectric.shadows.ShadowActivity;

@RunWith(RobolectricTestRunner.class)
public class TestSaveMasterItem extends BaseTest {

	private ImageButton _btnScan;
	private EditText _etName;
	private EditText _etNotes;
	private EditText _etQuantity;
	private EditText _etUnit;
	private CheckBox _chkSelectByDefault;
	private Button _btnCancel;
	private Button _btnDelete;
	private Button _btnApply;
	
	private Spinner _spinCat;
	private EditMasterItemActivity _activity;
	
	@Before
	public void setup()
	{
		super.setup();
		try {
			ShadowActivity shadow ;	      
			_activity = (EditMasterItemActivity) new EditMasterItemActivity();
			shadow = shadowOf(_activity);
			
			shadow.setIntent(createIntentToEditGroceryItem());
			_activity.onCreate(null);
		} catch (Exception e) {
			fail(e.getMessage());
		}
		_btnScan = (ImageButton)_activity.findViewById(R.id.btnScan);
		_etName = (EditText)_activity.findViewById(R.id.edit_name);
		_etNotes = (EditText)_activity.findViewById(R.id.edit_notes);
		_etQuantity = (EditText)_activity.findViewById(R.id.edit_quantity);
		_etUnit = (EditText)_activity.findViewById(R.id.edit_unitOrSize);
		_chkSelectByDefault = (CheckBox)_activity.findViewById(R.id.selectByDefault);
		_btnCancel = (Button)_activity.findViewById(R.id.button_cancel);
		_btnDelete = (Button)_activity.findViewById(R.id.button_delete);
		_btnApply = (Button)_activity.findViewById(R.id.button_save);
	}
	
	@After
	public void teardown()
	{
		
		super.teardown();
	}
	
	@Test
	public void testSaveItemCheckedByDefault()
	{
		String newName = "updated name";
		
		editItem(newName, null, null, null, true, null);
		_btnApply.performClick();
		GroceryItem itemEdited = _activity.getItem();
		assertTrue(itemEdited.getSelected());
		assertEquals(newName, itemEdited.getName());
	}
	private void editItem(String newName, String newNotes, Integer quantity, String newUnits,
			Boolean selectByDefault, Category newCat)
	{
		if (newName != null)
		{
			_etName.setText(newName);
		}
		if (newNotes != null)
			{
			_etNotes.setText(newNotes);
			}
		if (quantity != null)
			{_etQuantity.setText(quantity.toString());
			}
		if (newUnits != null)
			{
			_etUnit.setText(newUnits);
			}
		if (selectByDefault != null)
			{_chkSelectByDefault.setChecked(selectByDefault);
			}
		if (newCat != null)
		{
			ArrayList<Category> cats = _activity.getPossibleLocations();
			int position = cats.indexOf(newCat);
			
			_spinCat.setSelection(position);
		}
	}
	
}
